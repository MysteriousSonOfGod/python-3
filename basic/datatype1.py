'''

1. 숫자형
1-1. 정수형(Integer)
1-2. 실수형(Floating-point)
1-3. 복소수(Complex number)
1-4. 8진수와 16진수
2. 연산자
2-1. 사칙연산자 + - * /
2-2. 제곱을 나타내는 연산자 ^
2-3. 나머지를 반환하는 연산자 %
2-4. 몫을 반환하는 연산자 // 
3. 문자열 자료형
3-1. 문자열 만들기
단일 큰따옴표 사용하기
단일 작은따옴표 사용하기
큰따옴표 3개연속 사용하기
작은따옴표 3개연속 사용하기
3-2. 문자열 만들기 방법이 4가지인 이유
3-3. 이스케이프 코드
4. 문자열 연산하기
4-1. 문자열 더하기
4-2. 문자열 곱하기


1. 문자열 인덱싱(Indexing)
2. 문자열 슬라이싱(Slicing)
3. 문자열 포매팅
3-1. 숫자 바로 대입하기
3-2. 문자열 바로 대입하기
3-3. 변수로 대입하기
3-4. 여러개 대입하기
4. 문자열 포맷 코드
    %s 문자열(String)
    %c 문자 1개(Character)
    %d 정수(Integer)
    %f 부동 소수(floating-point)
    %o 8진수
    %x 16진수
%% Literal % (문자 % 그 자체)
5. 포매팅 응용하기
5-1. 정렬 및 공백
5-2. 소수점 표현하기

6. 문자열 관련 함수들
6-1. 문자 개수 세기 ( count )
6-2. 문자열 길이 세기 ( len )
6-3. 위치 알려주기1 ( find )
6-4. 위치 알려주기2 ( index )
6-5. 문자열 삽입 ( join )
6-6. 문자열 나누기 ( split )
6-7. 소문자를 대문자로 바꾸기 ( upper )
6-8. 대문자를 소문자로 바꾸기 ( lower )
6-9. 왼쪽 공백 지우기 ( lstrip )
6-10. 오른쪽 공백 지우기 ( rstrip )
6-11. 양쪽 공백 지우기 ( strip )
6-12. 문자열 바꾸기 ( replace )
6-13. 문자열 포매팅 ( format )

7. 리스트 자료형
1. 리스트 자료형 : 리스트명 = [요소1, 요소2, 요소3, ... ]
2. 리스트의 인덱싱과 슬라이싱
3. 리스트 연산자
4. 리스트 요소 수정하기
list = [0,1,2,3,4,5]
list[5] = 10
list[3:6] = 10,20,30
list[1:3] = 10,20,30,40,50 
list[1] = 10,20,30,40,50 
5. 리스트 요소 삭제하기
list[0:1]=[]
del list[0]

7. 리스트 함수들
1. 리스트 끝에 요소 추가하기 : list.append(any) 
2. 리스트의 원하는 위치에 요소 삽입하기 : list.insert(index, any) 
3. 리스트 정렬하기 : list.sort()
4. 리스트 뒤집기 : list.reverse()
5. 요소의 위치 반환 : list.index(any)
6. 리스트 요소 제거하기 : list.remove(index)
7. 리스트 요소 꺼내기 : list.pop(), list.pop(index)
8. 리스트의 요소 개수 세기 : list.count(value)
9. 리스트 확장하기 : list.extend(list)

8. 튜플 자료형
1. 튜플 자료형 : 튜플명 = (요소1, 요소2, 요소3, ... )
2. 튜플 요소 값 삭제 및 변경 오류 : 삭제 및 수정이 불가능

9. 딕셔너리 자료형
1. 딕셔너리 자료형 : 딕셔너리명 = {Key1:Value1, Key2:Value2, Key3:Value3, ... }
2. 딕셔너리 추가 및 삭제하기
dic[Key] = Value
del dic[Key]
3. 딕셔너리 사용하기
4. 딕셔너리 주의사항
먼저, Key의 중복을 피해야 합니다.
두번째는 딕셔너리의 Key에 리스트를 사용하지 못하는 점입니다. 
test_list = {[1,2,3]: '123'}
test_tuple = {(1,2,3): '123'}

10. 집합 자료형
1. 집합 자료형 : set() 의 괄호안에 리스트 또는 문자열을 입력하여 집합 자료형을 만듭니다.
2. 집합 자료형의 특징
중복을 허용하지 않는다
순서가 없다.(Unordered)
3. 집합 자료형 활용하기
1. 교집합 : &, intersection()
2. 합집합 : |, union() 
3. 차집합 : -, difference()
4. 집합 자료형 관련 함수
1. 하나의 값을 추가 add()
2. 여러개의 값을 추가 update()
3. 특정 값을 제거 remove()

11. 제어문(if문, while문, for문)
1. if문
2. while문
3. for문


'''


# 사용자에게 주민번호 7글자를 입력받아서 결과 출력하기
# Tigercow.Door
print("주민번호 앞에서부터 7글자를 입력하세요.")
RRN = input()
year = RRN[0:2]
month = RRN[2:4]
day = RRN[4:6]
sex = RRN[6]
print("입력하신분께서는 19%s년 %s월 %s일에 태어나셨고, " % (year, month, day), end='')
if (sex == '1'):
    print("성별은 남자입니다.")
else:
    print("성별은 여자입니다.")
