'''
1. 객체 지향 프로그래밍(OOP)은 무엇인가? 왜 사용하는가?
2. 클래스와 인스턴스(Class and Instance)
3. 클래스 변수(Class Variable)
4. 클래스 메소드와 스태틱 메소드(Class Method and Static Method)
5. 상속과 서브 클래스(Inheritance and Subclass)
6. 매직 메소드(Magic Method)
7. 속성 데코레이터(Property Decorator) - Gettes, Setters, Deleters
'''

# 객체 지향 프로그래밍(OOP)은 무엇인가?
'''
객체 지향 프로그래밍(영어: Object-Oriented Programming, OOP)은 컴퓨터 프로그래밍의 패러다임의 하나이다. 
객체 지향 프로그래밍은 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나 여러 개의 독립된 단위, 
즉 "객체"들의 모임으로 파악하고자 하는 것이다. 각각의 객체는 메시지를 주고받고, 데이터를 처리할 수 있다.

객체 지향 프로그래밍은 프로그램을 유연하고 변경이 용이하게 만들기 때문에 대규모 소프트웨어 개발에 많이 사용된다. 
또한 프로그래밍을 더 배우기 쉽게 하고 소프트웨어 개발과 보수를 간편하게 하며, 
보다 직관적인 코드 분석을 가능하게 하는 장점을 갖고 있습니다. 
그러나 지나친 프로그램의 객체화 경향은 실제 세계의 모습을 그대로 반영하지 못한다는 비판을 받기도 한다.

by 위카백과

'''
